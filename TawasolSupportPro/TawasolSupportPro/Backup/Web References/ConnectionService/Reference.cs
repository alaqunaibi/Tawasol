//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace TawasolSupportPro.ConnectionService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Tawasol_ServiceSoap", Namespace="http://www.Mobily.ws/TawasolServices/call")]
    public partial class Tawasol_Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConnectToDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetreiveScalarData_FromProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetreiveData_FromProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAggregateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Tawasol_Service() {
            this.Url = global::TawasolSupportPro.Properties.Settings.Default.TawasolSupportPro_ConnectionService_Tawasol_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConnectToDBCompletedEventHandler ConnectToDBCompleted;
        
        /// <remarks/>
        public event InsertDataCompletedEventHandler InsertDataCompleted;
        
        /// <remarks/>
        public event DeleteDataCompletedEventHandler DeleteDataCompleted;
        
        /// <remarks/>
        public event UpdateDataCompletedEventHandler UpdateDataCompleted;
        
        /// <remarks/>
        public event RetrieveDataCompletedEventHandler RetrieveDataCompleted;
        
        /// <remarks/>
        public event CheckLoginCompletedEventHandler CheckLoginCompleted;
        
        /// <remarks/>
        public event RetreiveScalarData_FromProcedureCompletedEventHandler RetreiveScalarData_FromProcedureCompleted;
        
        /// <remarks/>
        public event RetreiveData_FromProcedureCompletedEventHandler RetreiveData_FromProcedureCompleted;
        
        /// <remarks/>
        public event GetAggregateCompletedEventHandler GetAggregateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/ConnectToDB", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConnectToDB() {
            this.Invoke("ConnectToDB", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginConnectToDB(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ConnectToDB", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndConnectToDB(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ConnectToDBAsync() {
            this.ConnectToDBAsync(null);
        }
        
        /// <remarks/>
        public void ConnectToDBAsync(object userState) {
            if ((this.ConnectToDBOperationCompleted == null)) {
                this.ConnectToDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectToDBOperationCompleted);
            }
            this.InvokeAsync("ConnectToDB", new object[0], this.ConnectToDBOperationCompleted, userState);
        }
        
        private void OnConnectToDBOperationCompleted(object arg) {
            if ((this.ConnectToDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectToDBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/InsertData", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertData(string Table, string Columns, string Values) {
            this.Invoke("InsertData", new object[] {
                        Table,
                        Columns,
                        Values});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertData(string Table, string Columns, string Values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertData", new object[] {
                        Table,
                        Columns,
                        Values}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndInsertData(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void InsertDataAsync(string Table, string Columns, string Values) {
            this.InsertDataAsync(Table, Columns, Values, null);
        }
        
        /// <remarks/>
        public void InsertDataAsync(string Table, string Columns, string Values, object userState) {
            if ((this.InsertDataOperationCompleted == null)) {
                this.InsertDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDataOperationCompleted);
            }
            this.InvokeAsync("InsertData", new object[] {
                        Table,
                        Columns,
                        Values}, this.InsertDataOperationCompleted, userState);
        }
        
        private void OnInsertDataOperationCompleted(object arg) {
            if ((this.InsertDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/DeleteData", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteData(string Table, string whr) {
            this.Invoke("DeleteData", new object[] {
                        Table,
                        whr});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteData(string Table, string whr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteData", new object[] {
                        Table,
                        whr}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteData(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteDataAsync(string Table, string whr) {
            this.DeleteDataAsync(Table, whr, null);
        }
        
        /// <remarks/>
        public void DeleteDataAsync(string Table, string whr, object userState) {
            if ((this.DeleteDataOperationCompleted == null)) {
                this.DeleteDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDataOperationCompleted);
            }
            this.InvokeAsync("DeleteData", new object[] {
                        Table,
                        whr}, this.DeleteDataOperationCompleted, userState);
        }
        
        private void OnDeleteDataOperationCompleted(object arg) {
            if ((this.DeleteDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/UpdateData", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateData(string Table, string Columns, string Values, string whr) {
            this.Invoke("UpdateData", new object[] {
                        Table,
                        Columns,
                        Values,
                        whr});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateData(string Table, string Columns, string Values, string whr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateData", new object[] {
                        Table,
                        Columns,
                        Values,
                        whr}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateData(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateDataAsync(string Table, string Columns, string Values, string whr) {
            this.UpdateDataAsync(Table, Columns, Values, whr, null);
        }
        
        /// <remarks/>
        public void UpdateDataAsync(string Table, string Columns, string Values, string whr, object userState) {
            if ((this.UpdateDataOperationCompleted == null)) {
                this.UpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataOperationCompleted);
            }
            this.InvokeAsync("UpdateData", new object[] {
                        Table,
                        Columns,
                        Values,
                        whr}, this.UpdateDataOperationCompleted, userState);
        }
        
        private void OnUpdateDataOperationCompleted(object arg) {
            if ((this.UpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/RetrieveData", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetrieveData(string Table, string Columns, string whr, string Orderby) {
            object[] results = this.Invoke("RetrieveData", new object[] {
                        Table,
                        Columns,
                        whr,
                        Orderby});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRetrieveData(string Table, string Columns, string whr, string Orderby, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RetrieveData", new object[] {
                        Table,
                        Columns,
                        whr,
                        Orderby}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRetrieveData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveDataAsync(string Table, string Columns, string whr, string Orderby) {
            this.RetrieveDataAsync(Table, Columns, whr, Orderby, null);
        }
        
        /// <remarks/>
        public void RetrieveDataAsync(string Table, string Columns, string whr, string Orderby, object userState) {
            if ((this.RetrieveDataOperationCompleted == null)) {
                this.RetrieveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveDataOperationCompleted);
            }
            this.InvokeAsync("RetrieveData", new object[] {
                        Table,
                        Columns,
                        whr,
                        Orderby}, this.RetrieveDataOperationCompleted, userState);
        }
        
        private void OnRetrieveDataOperationCompleted(object arg) {
            if ((this.RetrieveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveDataCompleted(this, new RetrieveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/CheckLogin", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CheckLogin(string UserID, string PasswordID, string CustomerLogin, string CustomerPassword) {
            object[] results = this.Invoke("CheckLogin", new object[] {
                        UserID,
                        PasswordID,
                        CustomerLogin,
                        CustomerPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckLogin(string UserID, string PasswordID, string CustomerLogin, string CustomerPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckLogin", new object[] {
                        UserID,
                        PasswordID,
                        CustomerLogin,
                        CustomerPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndCheckLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string UserID, string PasswordID, string CustomerLogin, string CustomerPassword) {
            this.CheckLoginAsync(UserID, PasswordID, CustomerLogin, CustomerPassword, null);
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string UserID, string PasswordID, string CustomerLogin, string CustomerPassword, object userState) {
            if ((this.CheckLoginOperationCompleted == null)) {
                this.CheckLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginOperationCompleted);
            }
            this.InvokeAsync("CheckLogin", new object[] {
                        UserID,
                        PasswordID,
                        CustomerLogin,
                        CustomerPassword}, this.CheckLoginOperationCompleted, userState);
        }
        
        private void OnCheckLoginOperationCompleted(object arg) {
            if ((this.CheckLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginCompleted(this, new CheckLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/RetreiveScalarData_FromProcedure", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double RetreiveScalarData_FromProcedure(string ProcedureName, string ParameterNames, string ParameterTypes, string ParameterValues) {
            object[] results = this.Invoke("RetreiveScalarData_FromProcedure", new object[] {
                        ProcedureName,
                        ParameterNames,
                        ParameterTypes,
                        ParameterValues});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRetreiveScalarData_FromProcedure(string ProcedureName, string ParameterNames, string ParameterTypes, string ParameterValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RetreiveScalarData_FromProcedure", new object[] {
                        ProcedureName,
                        ParameterNames,
                        ParameterTypes,
                        ParameterValues}, callback, asyncState);
        }
        
        /// <remarks/>
        public double EndRetreiveScalarData_FromProcedure(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void RetreiveScalarData_FromProcedureAsync(string ProcedureName, string ParameterNames, string ParameterTypes, string ParameterValues) {
            this.RetreiveScalarData_FromProcedureAsync(ProcedureName, ParameterNames, ParameterTypes, ParameterValues, null);
        }
        
        /// <remarks/>
        public void RetreiveScalarData_FromProcedureAsync(string ProcedureName, string ParameterNames, string ParameterTypes, string ParameterValues, object userState) {
            if ((this.RetreiveScalarData_FromProcedureOperationCompleted == null)) {
                this.RetreiveScalarData_FromProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetreiveScalarData_FromProcedureOperationCompleted);
            }
            this.InvokeAsync("RetreiveScalarData_FromProcedure", new object[] {
                        ProcedureName,
                        ParameterNames,
                        ParameterTypes,
                        ParameterValues}, this.RetreiveScalarData_FromProcedureOperationCompleted, userState);
        }
        
        private void OnRetreiveScalarData_FromProcedureOperationCompleted(object arg) {
            if ((this.RetreiveScalarData_FromProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetreiveScalarData_FromProcedureCompleted(this, new RetreiveScalarData_FromProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/RetreiveData_FromProcedure", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetreiveData_FromProcedure(string ProcedureName, string ParameterNames, string ParameterTypes, string ParameterValues, string Whr) {
            object[] results = this.Invoke("RetreiveData_FromProcedure", new object[] {
                        ProcedureName,
                        ParameterNames,
                        ParameterTypes,
                        ParameterValues,
                        Whr});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRetreiveData_FromProcedure(string ProcedureName, string ParameterNames, string ParameterTypes, string ParameterValues, string Whr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RetreiveData_FromProcedure", new object[] {
                        ProcedureName,
                        ParameterNames,
                        ParameterTypes,
                        ParameterValues,
                        Whr}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRetreiveData_FromProcedure(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetreiveData_FromProcedureAsync(string ProcedureName, string ParameterNames, string ParameterTypes, string ParameterValues, string Whr) {
            this.RetreiveData_FromProcedureAsync(ProcedureName, ParameterNames, ParameterTypes, ParameterValues, Whr, null);
        }
        
        /// <remarks/>
        public void RetreiveData_FromProcedureAsync(string ProcedureName, string ParameterNames, string ParameterTypes, string ParameterValues, string Whr, object userState) {
            if ((this.RetreiveData_FromProcedureOperationCompleted == null)) {
                this.RetreiveData_FromProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetreiveData_FromProcedureOperationCompleted);
            }
            this.InvokeAsync("RetreiveData_FromProcedure", new object[] {
                        ProcedureName,
                        ParameterNames,
                        ParameterTypes,
                        ParameterValues,
                        Whr}, this.RetreiveData_FromProcedureOperationCompleted, userState);
        }
        
        private void OnRetreiveData_FromProcedureOperationCompleted(object arg) {
            if ((this.RetreiveData_FromProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetreiveData_FromProcedureCompleted(this, new RetreiveData_FromProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Mobily.ws/TawasolServices/call/GetAggregate", RequestNamespace="http://www.Mobily.ws/TawasolServices/call", ResponseNamespace="http://www.Mobily.ws/TawasolServices/call", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAggregate(string TableName, string ColumnName, string Whr, int agregateType) {
            object[] results = this.Invoke("GetAggregate", new object[] {
                        TableName,
                        ColumnName,
                        Whr,
                        agregateType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAggregate(string TableName, string ColumnName, string Whr, int agregateType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAggregate", new object[] {
                        TableName,
                        ColumnName,
                        Whr,
                        agregateType}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAggregate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAggregateAsync(string TableName, string ColumnName, string Whr, int agregateType) {
            this.GetAggregateAsync(TableName, ColumnName, Whr, agregateType, null);
        }
        
        /// <remarks/>
        public void GetAggregateAsync(string TableName, string ColumnName, string Whr, int agregateType, object userState) {
            if ((this.GetAggregateOperationCompleted == null)) {
                this.GetAggregateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAggregateOperationCompleted);
            }
            this.InvokeAsync("GetAggregate", new object[] {
                        TableName,
                        ColumnName,
                        Whr,
                        agregateType}, this.GetAggregateOperationCompleted, userState);
        }
        
        private void OnGetAggregateOperationCompleted(object arg) {
            if ((this.GetAggregateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAggregateCompleted(this, new GetAggregateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ConnectToDBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InsertDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RetrieveDataCompletedEventHandler(object sender, RetrieveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CheckLoginCompletedEventHandler(object sender, CheckLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RetreiveScalarData_FromProcedureCompletedEventHandler(object sender, RetreiveScalarData_FromProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetreiveScalarData_FromProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetreiveScalarData_FromProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RetreiveData_FromProcedureCompletedEventHandler(object sender, RetreiveData_FromProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetreiveData_FromProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetreiveData_FromProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAggregateCompletedEventHandler(object sender, GetAggregateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAggregateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAggregateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591